{"version":3,"sources":["utils/context.js","utils/refactor.js","utils/color.js","components/NavBar.js","utils/typesImg.js","components/Stats.js","utils/typesImg2.js","components/Bio.js","components/PokemonInfo.js","components/PokemonCard.js","components/Pokemon.js","pages/Pokedex.js","App.js","index.js"],"names":["DataContext","createContext","refactorData","data","id","name","species","sprites","height","weight","types","abilities","stats","imgSrc","front_default","back_default","front_shiny","back_shiny","refactorImg","map","item","type","refactorTypes","ability","refactorAbilities","stat","number","base_stat","refactorStats","parseFloat","convertHeight","convertWeight","getColor","axios","get","err","theme","black","blue","brown","gray","green","pink","purple","red","white","yellow","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","marginLeft","width","searchIcon","padding","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","classes","useState","query","setQuery","useContext","setData","className","AppBar","Toolbar","Typography","variant","noWrap","onSubmit","e","preventDefault","toLocaleLowerCase","then","a","res","result","colorResult","catch","Input","startAdornment","InputAdornment","placeholder","value","onChange","event","target","required","icons","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","root","marginTop","ColouredCircularProgress","withStyles","circle","props","CircularProgress","CircularProgressWithLabel","Box","top","left","bottom","right","component","Math","round","Stats","i","Number","flexDirection","label","flexBasis","textAlign","img","Bio","labelsInDiv","colonDivs","Array","fill","colon","src","join","container","textDecoration","header","media","paddingTop","PokemonInfo","Card","toUpperCase","CardMedia","image","maxWidth","flex","paddingBottom","content","fontSize","objectFit","RecipeReviewCard","classname","CardHeader","charAt","slice","CardContent","modal","paper","background","boxShadow","shadows","Pokemon","React","useMemo","open","setOpen","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","flexWrap","Pokedex","initialVal","useEffect","promises","randomIndex","floor","random","Promise","all","responseList","dataList","refactorDataList","console","log","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f1c2426.chunk.js","sourcesContent":["\r\nimport {createContext} from 'react';\r\n\r\nexport const DataContext = createContext(null);","/**\r\n * This module is for refactoring the data that is retrieved from \r\n * the fetch\r\n */\r\n\r\nconst refactorTypes = (types) => {\r\n    const refactoredTypes = types.map(item => item.type.name);\r\n    return refactoredTypes;\r\n}\r\n\r\nconst refactorAbilities = (abilities) => {\r\n    const refactoredAbilities = abilities.map(item => item.ability.name)\r\n    return refactoredAbilities;\r\n}\r\n\r\nconst refactorStats = (stats) => {\r\n    const refactoredStats = stats.map(item => {\r\n        const name = item.stat.name;\r\n        const number = item.base_stat;\r\n        return { name, number }\r\n    });\r\n    return refactoredStats;\r\n}\r\n\r\n/* Convert from decimetres to cm */\r\nconst convertHeight = (height) => {\r\n    return parseFloat(height * 10.0);\r\n}\r\n\r\nconst convertWeight = (weight) => {\r\n    return parseFloat(weight / 10.0);\r\n}\r\n\r\nconst refactorImg = (sprites) => {\r\n    const { front_default, back_default, front_shiny, back_shiny } = sprites;\r\n    const imgURLList = [front_default, back_default, front_shiny, back_shiny];\r\n    return imgURLList\r\n}\r\n\r\nexport const refactorData = (data) => {\r\n    let { id, name, species, sprites, height, weight, types, abilities, stats} = data;\r\n    if (!{ name, sprites, height, weight, types, abilities, stats}) return null;\r\n    const imgSrc = refactorImg(sprites);\r\n    const refactoredTypes = refactorTypes(types);\r\n    const refactoredAbilities = refactorAbilities(abilities);\r\n    const refactoredStats = refactorStats(stats)\r\n    const convertedHeight = convertHeight(height);\r\n    const convertedWeight = convertWeight(weight)\r\n    return { id, name, imgSrc, species,  types : refactoredTypes, abilities : refactoredAbilities, stats : refactoredStats, height : convertedHeight, weight : convertedWeight};\r\n}\r\n\r\n","import axios from 'axios'\r\nconst URL = 'https://pokeapi.co/api/v2/pokemon-species'\r\n\r\n/**\r\n * This module contains the colors that I've chosen for each pokemon as well as a function\r\n * that makes an API call to retreive the colour of the pokemon based on their species\r\n */\r\n\r\nexport const getColor = (species) => {\r\n    try {\r\n        return axios.get(`${URL}/${species.name}`);\r\n    } catch (err) {\r\n        return \"default\"\r\n    }\r\n}\r\n\r\nexport const theme = {\r\n    black : \"Black\",\r\n    blue : \"LightSkyBlue\",\r\n    brown : \"SandyBrown\",\r\n    gray : \"LightGray\",\r\n    green : \"MediumSpringGreen\",\r\n    pink : \"HotPink\",\r\n    purple : \"MediumPurple\",\r\n    red : \"OrangeRed\",\r\n    white : \"Silver\",\r\n    yellow : \"Gold\"\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { DataContext } from '../utils/context'\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { refactorData } from '../utils/refactor'\r\nimport { getColor } from '../utils/color'\r\nimport axios from 'axios';\r\n\r\nconst URL = 'https://pokeapi.co/api/v2/pokemon';\r\n\r\n/*\r\n  The Navigation bar that contains the search functionality. It utilizes the context API to assign the data to the data variable in order to\r\n  avoid props drilling\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  \r\n  }));\r\n  \r\n\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    const [ query, setQuery ] = useState('');\r\n    const { data, setData } = useContext(DataContext)\r\n\r\n\r\n\r\n    const handleSubmit =  (e) => {\r\n      e.preventDefault();\r\n      axios\r\n      .get(`${URL}/${query.toLocaleLowerCase()}`)\r\n      .then(async (res) => {\r\n        const result = refactorData(res.data);\r\n        const colorResult = await getColor(result.species);\r\n        setData([{ name : result.name,\r\n                    id : result.id, \r\n                    imgSrc : result.imgSrc, \r\n                    types : result.types,\r\n                    stats : result.stats,\r\n                    abilities : result.abilities, \r\n                    height : result.height, \r\n                    weight : result.weight,\r\n                    color : colorResult.data.color.name\r\n                  }]);\r\n      })\r\n      .catch(err => {\r\n        setData([])\r\n      })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className={classes.grow}>\r\n        <AppBar position=\"static\" color='default'>\r\n          <Toolbar>\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                    Pokedex\r\n                </Typography>\r\n                <div className={classes.search}>\r\n                      <form onSubmit={handleSubmit}>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"input-with-icon-adornment\"\r\n                            startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                                <SearchIcon />\r\n                            </InputAdornment>\r\n                            }\r\n                            placeholder=\"Search Pokemon\"\r\n                            value={query}\r\n                            onChange={event => setQuery(event.target.value)}\r\n                            required={true}\r\n                        />\r\n                        </form>  \r\n                </div>\r\n                <div className={classes.grow} />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )}\r\n\r\nexport default NavBar\r\n","const normal = 'https://cdn2.bulbagarden.net/upload/9/95/Normal_icon_SwSh.png';\r\nconst fighting = 'https://cdn2.bulbagarden.net/upload/3/3b/Fighting_icon_SwSh.png';\r\nconst flying = 'https://cdn2.bulbagarden.net/upload/b/b5/Flying_icon_SwSh.png';\r\nconst poison = 'https://cdn2.bulbagarden.net/upload/8/8d/Poison_icon_SwSh.png';\r\nconst ground = 'https://cdn2.bulbagarden.net/upload/2/27/Ground_icon_SwSh.png';\r\nconst rock = 'https://cdn2.bulbagarden.net/upload/1/11/Rock_icon_SwSh.png';\r\nconst bug = 'https://cdn2.bulbagarden.net/upload/9/9c/Bug_icon_SwSh.png';\r\nconst ghost = 'https://cdn2.bulbagarden.net/upload/0/01/Ghost_icon_SwSh.png';\r\nconst steel = 'https://cdn2.bulbagarden.net/upload/0/09/Steel_icon_SwSh.png';\r\nconst fire = 'https://cdn2.bulbagarden.net/upload/a/ab/Fire_icon_SwSh.png'; \r\nconst water = 'https://cdn2.bulbagarden.net/upload/8/80/Water_icon_SwSh.png';\r\nconst grass = 'https://cdn2.bulbagarden.net/upload/a/a8/Grass_icon_SwSh.png';\r\nconst electric = 'https://cdn2.bulbagarden.net/upload/7/7b/Electric_icon_SwSh.png';\r\nconst psychic = 'https://cdn2.bulbagarden.net/upload/7/73/Psychic_icon_SwSh.png';\r\nconst ice = 'https://cdn2.bulbagarden.net/upload/1/15/Ice_icon_SwSh.png';\r\nconst dragon = 'https://cdn2.bulbagarden.net/upload/7/70/Dragon_icon_SwSh.png';\r\nconst dark = 'https://cdn2.bulbagarden.net/upload/d/d5/Dark_icon_SwSh.png'; \r\nconst fairy = 'https://cdn2.bulbagarden.net/upload/c/c6/Fairy_icon_SwSh.png';\r\n\r\nconst icons = { normal, fighting, flying, poison, ground, rock, bug, ghost, steel, fire, water, grass, electric, psychic, ice, dragon, dark, fairy};\r\n\r\nexport default icons;","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { DataContext } from '../utils/context'\r\nimport { theme } from '../utils/color'\r\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\r\nimport '../style/style.css'\r\n\r\n\r\n/**\r\n * This is the component that displays the stats of the Pokemon which is visually displayed by the progress wheel\r\n */\r\nconst useStyles = makeStyles(theme => ({\r\n  root : {\r\n    marginTop: \"10\"\r\n  }\r\n}));\r\n\r\n\r\nconst ColouredCircularProgress = withStyles({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  circle : {\r\n    color : (props) => theme[props.color]\r\n  }\r\n})(CircularProgress);\r\n\r\n\r\nconst CircularProgressWithLabel = (props) => {\r\n    const { data } = useContext(DataContext);\r\n    const classes = useStyles();\r\n\r\n    \r\n    return (\r\n      <Box position=\"relative\" display=\"inline-flex\" className={classes.root}>\r\n        <ColouredCircularProgress color={props.color} variant=\"determinate\" {...props} className={classes.circle}/>\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{Math.round(props.value)}</Typography>\r\n        </Box>\r\n        \r\n      </Box>\r\n      \r\n    );\r\n  }\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate variant.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n  \r\n\r\nconst Stats = (props) => {\r\n    const { stats } = props;\r\n    const { data } = useContext(DataContext);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"statsContainer\">\r\n            {stats && stats.map((stat, i) => {\r\n                    return (<div key={i} className='stat'>\r\n                                <div><CircularProgressWithLabel color={props.color} value={Number(stat.number)}/></div>\r\n                                <div>{stat.name}</div>\r\n                            </div>)\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","const normal = 'https://cdn2.bulbagarden.net/upload/0/0f/NormalIC.png';\r\nconst fighting = 'https://cdn2.bulbagarden.net/upload/9/9b/FightingIC.png';\r\nconst flying = 'https://cdn2.bulbagarden.net/upload/d/dc/FlyingIC.png';\r\nconst poison = 'https://cdn2.bulbagarden.net/upload/8/86/PoisonIC.png';\r\nconst ground = 'https://cdn2.bulbagarden.net/upload/8/87/GroundIC.png';\r\nconst rock = 'https://cdn2.bulbagarden.net/upload/e/e6/RockIC.png';\r\nconst bug = 'https://cdn2.bulbagarden.net/upload/b/bd/BugIC.png';\r\nconst ghost = 'https://cdn2.bulbagarden.net/upload/c/c3/GhostIC.png';\r\nconst steel = 'https://cdn2.bulbagarden.net/upload/7/7e/SteelIC.png';\r\nconst fire = 'https://cdn2.bulbagarden.net/upload/9/9f/FireIC.png'; \r\nconst water = 'https://cdn2.bulbagarden.net/upload/b/b0/WaterIC.png';\r\nconst grass = 'https://cdn2.bulbagarden.net/upload/a/a5/GrassIC.png';\r\nconst electric = 'https://cdn2.bulbagarden.net/upload/e/ea/ElectricIC.png';\r\n\r\nconst psychic = 'https://cdn2.bulbagarden.net/upload/f/f8/PsychicIC.png';\r\nconst ice = 'https://cdn2.bulbagarden.net/upload/8/86/IceIC.png';\r\nconst dragon = 'https://cdn2.bulbagarden.net/upload/c/c3/DragonIC.png';\r\nconst dark = 'https://cdn2.bulbagarden.net/upload/e/e3/DarkIC.png'; \r\nconst fairy = 'https://cdn2.bulbagarden.net/upload/3/31/FairyIC.png';\r\n\r\nconst icons = { normal, fighting, flying, poison, ground, rock, bug, ghost, steel, fire, water, grass, electric, psychic, ice, dragon, dark, fairy};\r\n\r\nexport default icons;","import React, { useContext } from 'react'\r\nimport icons from '../utils/typesImg2'\r\nimport { DataContext } from '../utils/context'\r\nimport '../style/style.css'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\n/** \r\n * This component is specifically for Pokemon's attributes and bio\r\n * **/\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root : {\r\n        display : \"flex\",\r\n        flexDirection : \"row\",\r\n        justifyContent : \"center\"\r\n    },\r\n    label : {\r\n        flexBasis: '100%',\r\n        textAlign: \"right\"\r\n    },\r\n    value : {\r\n        flexBasis: '100%'\r\n    },\r\n    img : {\r\n        height: 15,\r\n        width: 70\r\n    }\r\n}))\r\n\r\nconst Bio = (props) => {\r\n    const { data } = useContext(DataContext)\r\n    const {id, types, height, weight, abilities} = props\r\n    const labels = ['ID', 'Type', 'Height', 'Weight', 'Abilities'];\r\n    const classes = useStyles();\r\n\r\n    const labelsInDiv = labels.map((label, i) => {\r\n        return <div key={i}><b>{label}</b></div>\r\n    })\r\n\r\n    const colonDivs = new Array(5).fill(' ').map(colon => <div><b>{' '}{' : '}{' '}</b></div>)\r\n  \r\n\r\n\r\n    return (\r\n        <>\r\n        {\r\n        data &&\r\n        <div className={classes.root}>\r\n            <div className={classes.label}>\r\n                {labelsInDiv}\r\n            </div>\r\n            <divs>\r\n                {colonDivs}\r\n            </divs>\r\n            <div className={classes.value}>\r\n                {id && <div>#{' ', id}</div>}\r\n                {types && types.map(type => <><img className={classes.img} src={icons[type]}/></>)}\r\n                {height && <div> {height}cm</div>}\r\n                {weight && <div> {weight}kg</div>}\r\n                {abilities && <div> {abilities.join(', ')}</div> }  \r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bio\r\n","import React from 'react'\r\nimport icons from '../utils/typesImg'\r\nimport Stats from './Stats'\r\nimport '../style/style.css'\r\nimport Bio from './Bio'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Carousel from 'react-material-ui-carousel'\r\n\r\n/**\r\n * This component contains the full overview of a pokemon. It's the parent component of two child components that have\r\n * the information about the pokemon divided into\r\n */\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n    },\r\n    container: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    },\r\n    a: {\r\n        textDecoration: \"None\"\r\n    },\r\n    header : {\r\n        textAlign: 'center'\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nconst PokemonInfo = (props) => {\r\n    const { name, id, imgSrc, types, stats, height, weight, abilities, color} = props\r\n    const classes = useStyles();\r\n    return (\r\n\r\n            <Card className={classes.root}>\r\n                <div className={classes.header}><h2>{name && name.toUpperCase()}</h2></div>\r\n                <Carousel>\r\n                {imgSrc && imgSrc.map(img => <CardMedia\r\n                                                className={classes.media}\r\n                                                image={img}\r\n                                                title=\"Portrait\"\r\n                    />)\r\n                }\r\n                </Carousel>\r\n               \r\n                <div><Bio id={id} types={types} height={height} weight={weight} abilities={abilities}/></div>\r\n                <Stats stats={stats} color={color}/>\r\n            </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default PokemonInfo\r\n","import React, { useContext } from 'react';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport icons from '../utils/typesImg'\r\nimport { DataContext } from '../utils/context'\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\n/**\r\n * This is the component that appears when users query a Pokemon. It displays a brief summary of the pokemon\r\n */\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 180,\r\n    flex: \"1 0 33.33333%\",\r\n    marginTop: \"10%\",\r\n    paddingBottom: \"5\"\r\n  },\r\n  container : {\r\n    display : \"flex\",\r\n    justifyContent : \"center\"\r\n  },\r\n  a: {\r\n      textDecoration: \"None\"\r\n  },\r\n  header : {\r\n      textAlign: 'center'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '64.25%', // 16:9\r\n  },\r\n  content : {\r\n      fontSize: 13.5,\r\n      width: 200, \r\n      height: \"auto\",\r\n      maxWidth: 1000,\r\n      objectFit : \"contain\",\r\n\r\n  },\r\n  type : {\r\n    maxWidth: 1000,\r\n    objectFit : \"contain\",\r\n  }\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const { name, imgSrc, types } = props;\r\n  const { data } = useContext(DataContext);\r\n  \r\n\r\n  return (\r\n    <div >\r\n    {\r\n        name && (\r\n                <Card className={classes.root}>\r\n                  <div classname={classes.container}>\r\n           \r\n                  <InfoOutlinedIcon/>\r\n           \r\n                  </div>\r\n                    <CardHeader\r\n                        className={classes.header}\r\n                        title={name.charAt(0).toUpperCase() + name.slice(1)}\r\n                    />\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={imgSrc[0]}\r\n                        title=\"Portrait\"\r\n                    />\r\n                    <CardContent className={classes.content}>\r\n                        <div >\r\n                        <div className={classes.type}>\r\n                        {types && types.map((type, i) => <img className={classes.types} key={i} className=\"typeIcons\" src={icons[type]} alt={type}></img>)}\r\n                        </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n            )\r\n    }\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PokemonInfo from '../components/PokemonInfo'\r\nimport PokemonCard from '../components/PokemonCard'\r\nimport NavBar from '../components/NavBar'\r\nimport { DataContext } from '../utils/context'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n/*\r\n  The component is a parent component of the two other main pokemon components. It has the PokemonCard which contains a brief summary about the Pokemon and when clicked will\r\n  launch a modal that contains the full information about the Pokemon\r\n*/\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: \"15%\"\r\n\r\n    },\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n    \r\n    },\r\n  }));\r\n  \r\n\r\n\r\nconst Pokemon = (props) => {\r\n\r\n    const { data, setData } = React.useContext(DataContext)\r\n    const value = React.useMemo(() => ({ data: props, setData }), [props, setData]);\r\n \r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <a onClick={handleOpen}>\r\n                <PokemonCard name={props.name} imgSrc={props.imgSrc} types={props.types} />\r\n            </a>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={open}\r\n            onClose={handleClose}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n            timeout: 500,\r\n            }}>\r\n            <Fade in={open}>\r\n                <PokemonInfo name={props.name}\r\n                                    id={props.id} \r\n                                    imgSrc={props.imgSrc} \r\n                                    types={props.types} \r\n                                    height={props.height} \r\n                                    weight={props.weight} \r\n                                    abilities={props.abilities}\r\n                                    color={props.color}\r\n                                    stats={props.stats}/>\r\n            </Fade>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon\r\n","import React, { useState, useEffect } from 'react';\r\nimport NavBar from '../components/NavBar'\r\nimport { DataContext } from '../utils/context'\r\nimport Pokemon from '../components/Pokemon'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../style/style.css'\r\nimport { refactorData } from '../utils/refactor'\r\nimport { getColor } from '../utils/color'\r\n\r\nimport axios from 'axios';\r\n\r\nconst URL = 'https://pokeapi.co/api/v2/pokemon';\r\n\r\n\r\n/**\r\n * This is the main hub of the app. It contains the search bar and where the query results are displayed.\r\n * Additionally in the beginning of the app, there is a function that retrieves pokemons to\r\n * display\r\n */\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n  \r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\"\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nconst Pokedex = () => {\r\n\r\n   const [ data, setData ] = useState([]);\r\n   const value = { data, setData }\r\n   const [ initialVal, setInitialVal ] = useState('');\r\n   const classes = useStyles();\r\n\r\n   \r\n\r\n   useEffect(() => {\r\n     const promises = new Array(8)\r\n                                  .fill()\r\n                                  .map((value) => { \r\n                                    const randomIndex = Math.floor(Math.random() * 1000) + 1;\r\n                                    return axios.get(`${URL}/${randomIndex}`)\r\n                                  });\r\n\r\n    Promise.all(promises)\r\n                        .then(async (responseList) => {\r\n                          const dataList = responseList.map(res => res.data)\r\n                          const dataArray = []\r\n                          let refactorDataList = dataList.map(async (data) => {\r\n                              const result = refactorData(data);\r\n                              const colorResult = await getColor(data.species)\r\n                              return ( { name : result.name,\r\n                                id : result.id, \r\n                                imgSrc : result.imgSrc, \r\n                                types : result.types,\r\n                                stats : result.stats,\r\n                                abilities : result.abilities, \r\n                                height : result.height, \r\n                                weight : result.weight,\r\n                                color : colorResult.data.color.name\r\n                              })\r\n                          })\r\n                          const result = await Promise.all(refactorDataList.map(async (item) => {\r\n                            await item\r\n                            return item;\r\n                          }))\r\n                          console.log(result)\r\n                          setData(result);\r\n\r\n                        })\r\n\r\n   }, [])\r\n\r\n   useState(() => {\r\n     console.log(`pokemon array after ${initialVal}`)\r\n     setData(initialVal)\r\n    setData(initialVal)\r\n   }, [initialVal])\r\n\r\n\r\n    return (\r\n      <DataContext.Provider value={value}>\r\n        <div>\r\n          <NavBar/>\r\n          <div className={classes.container}>\r\n          {data && data.map(value => <Pokemon name={value.name}\r\n                                              id={value.id} \r\n                                              imgSrc={value.imgSrc} \r\n                                              types={value.types} \r\n                                              height={value.height} \r\n                                              weight={value.weight} \r\n                                              abilities={value.abilities}\r\n                                              color={value.color}\r\n                                              stats={value.stats}/>)}\r\n        </div>\r\n        </div>\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Pokedex\r\n","import React from 'react';\r\nimport Pokedex from './pages/Pokedex'\r\nimport { DataContext } from './utils/context'\r\n\r\n\r\nfunction App() {\r\n  const [ data, setData ] = React.useState([]);\r\n  \r\n\r\n\r\n  return (\r\n    <DataContext.Provider value={{data}}>\r\n      <div className=\"App\">\r\n        <Pokedex/>\r\n      </div>\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}